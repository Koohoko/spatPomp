% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asif.R
\docType{methods}
\name{asif}
\alias{asif}
\alias{asif-spatPomp}
\alias{asif,spatPomp-method}
\title{Adapted Simulation Island Filter (ASIF)}
\usage{
\S4method{asif}{spatPomp}(object, islands, Np, nbhd, params,
  tol = (1e-300), ...)
}
\arguments{
\item{object}{A \code{spatPomp} object.}

\item{islands}{The number of islands for the adapted simulations.}

\item{Np}{The number of particles used within each island for the adapted simulations.}

\item{nbhd}{A neighborhood function with three arguments: \code{object}, \code{time} and \code{unit}. The function should return a \code{list} of two-element vectors. The list output of
\code{nbhd(u,n)} consists of vectors \code{c(a,b)} where \eqn{(a,b)} is a neighbor of \code{(u,n)} in space-time.}

\item{params}{A parameter set for the spatiotemporal POMP. If missing, \code{asif} will attempt to run using \code{coef(object)}}

\item{tol}{If the resampling weight for a particle is zero due to floating-point precision issues, it is set to the value of \code{tol} since resampling has to be done.}

\item{...}{additional arguments supply new or modify existing model characteristics or components.
See \code{\link{pomp}} for a full list of recognized arguments.

When named arguments not recognized by \code{\link{pomp}} are provided, these are made available to all basic components via the so-called \dfn{userdata} facility.
This allows the user to pass information to the basic components outside of the usual routes of covariates (\code{covar}) and model parameters (\code{params}).
See \link[=userdata]{?userdata} for information on how to use this facility.}
}
\value{
Upon successful completion, \code{asif} returns an object of class
\sQuote{asifd_spatPomp}.
}
\description{
An algorithm for estimating the filter distribution of a spatiotemporal partially-observed Markov process (SpatPOMP for short).
Running \code{asif} causes the algorithm to run independent island jobs which each yield an imperfect adapted simulation. Simulating from the "adapted filter"
distribution runs into a curse of dimensionality (COD) problem, which is mitigated by keeping particles in each island close to each other through resampling down
to one particle per island at each observation time point.
The adapted simulations are then weighted in a way that tries to avert COD by making a weak coupling assumption to get an approximate filter distribution.
As a by-product, we also get a biased estimate of the likelihood of the data.
}
\section{Methods}{

The following methods are available for such an object:
\describe{
\item{\code{\link{logLik}}}{ yields a biased estimate of the log-likelihood of the data under the model. }
}
}

\examples{
# Create a simulation of a BM using default parameter set
b <- bm(U=3, N=10)

# Create a neighborhood function mapping a point in space-time to a list of "neighboring points" in space-time
bm_nbhd <- function(object, time, unit) {
  nbhd_list = list()
  if(time > 1 && unit > 1) nbhd_list = c(nbhd_list, list(c(unit - 1, time - 1)))
  return(nbhd_list)
}

# Run ASIF specified number of Monte Carlo islands and particles per island
asifd.b <- asif(b, islands = 50, Np = 10, nbhd = bm_nbhd)

# Get the likelihood estimate from ASIF
logLik(asifd.b)

# Compare with the likelihood estimate from Particle Filter
pfd.b <- pfilter(b, Np = 500)
logLik(pfd.b)
}
\seealso{
Other particle filter methods: \code{\link{asifir}},
  \code{\link{girf}}, \code{\link{hippie}},
  \code{\link{igirf}}

Other \pkg{spatPomp} filtering methods: \code{\link{asifir}},
  \code{\link{girf}}, \code{\link{igirf}}
}
\concept{\pkg{spatPomp} filtering methods}
\concept{particle filter methods}
