% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bpfilter.R
\name{bpfilter-spatPomp}
\alias{bpfilter-spatPomp}
\alias{bpfilter,spatPomp-method}
\title{Block Particle Filter (bpfilter)}
\usage{
\S4method{bpfilter}{spatPomp}(object, Np, num_partitions, partitions_list, params)
}
\arguments{
\item{object}{A \code{spatPomp} object}

\item{Np}{The number of particles used for the simulations. If missing, \code{bpfilter} will attempt to run using \code{ncol(params)}}

\item{num_partitions}{The number of partitions the spatial units are split into}

\item{partitions_list}{List parameter that can specify which spatial units are grouped into the same partitions. The values are vectors of integers for the spatial
units that should be grouped}

\item{params}{A parameter set for the spatiotemporal POMP. If missing, \code{bpfilter} will attempt to run using \code{coef(object)}}
}
\value{
Upon successful completion, \code{bpfilter} returns an object of class
\sQuote{bpfilterd_spatPomp}.
}
\description{
An algorithm used to estimate the filter distribution of a spatiotemporal partially-observed Markov process (spatPomp)
Running \code{bpfilter} causes the algorithm to split the spatial units into different partitions so that each spatial
unit belongs to one partition. When the particles are propogated, resampling of the particles occurs
within each partition independently based on sampled weights within the partition. Each partition samples only the spatial
components within the partition which allows for cross-pollination of particles where the highest weighted
components of each particle are more likely to be resampled and get combined with components of other particles.
By using local particle filters and resampling with a smaller subset of dimensions, it tries to avert the curse of dimensionality (COD) so that
the resampling does not result in particle depletion with one particle representing the complex filter distribution
}
\section{Methods}{

The following methods are available for such an object:
\describe{
\item{\code{\link{logLik}}}{ yields a biased estimate of the log-likelihood of the data under the model. }
}
}

\examples{
# Create a simulation of a BM using default parameter set
b <- bm(U=6, N=10)

#Run BP Filter with the specified number of particles and number of partitions
bpfilterd.b <- bpfilter(b, Np = 20, num_partitions = 3)

#Run BP filter with the specified number of particles and specified groupings of partitions
#Equivalent to above
bpfilterd.bm <- bpfilter(b, Np = 20, partitions_list = list(c(1,2), c(3,4), c(5,6)))

#Get the likelihood estimate from BP Filter
logLik(bpfilterd.b)

#Compare with the likelihood estimate from the particle filter
pfd.b <- pfilter(b, Np= 500)
logLik(pfd.b)

}
\seealso{
Other particle filter methods: 
\code{\link{asifir}()},
\code{\link{asif}()},
\code{\link{girf}()},
\code{\link{hippie}()},
\code{\link{igirf}()}

Other \pkg{spatPomp} filtering methods: 
\code{\link{asifir}()},
\code{\link{asif}()},
\code{\link{girf}()},
\code{\link{igirf}()}
}
\concept{\pkg{spatPomp} filtering methods}
\concept{particle filter methods}
