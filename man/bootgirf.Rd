% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootgirf.R
\name{bootgirf}
\alias{bootgirf}
\alias{bootgirf-spatPomp}
\alias{bootgirf,spatPomp-method}
\alias{bootgirf-girfd_spatPomp}
\alias{bootgirf,girfd_spatPomp-method}
\title{Guided intermediate resampling filter (GIRF) using a bootstrap guide function.}
\usage{
\S4method{bootgirf}{spatPomp}(object, Np, Ninter, lookahead, Nguide, params, tol, ...)

\S4method{bootgirf}{girfd_spatPomp}(object, Np, Ninter, lookahead, Nguide, params, tol, ...)
}
\arguments{
\item{object}{A \code{spatPomp} object.}

\item{Np}{The number of Monte Carlo particles to be used.}

\item{Ninter}{the number of intermediate resampling timepoints.}

\item{lookahead}{The number of future observations included in the guide function.}

\item{Nguide}{The number of simulations used to estimate state process uncertainty for each particle.}

\item{params}{A parameter set for the spatiotemporal POMP.}

\item{tol}{If the guide functions become too small (beyond floating-point precision limits), we set them to this value.}

\item{...}{additional arguments supply new or modify existing model characteristics or components.
See \code{\link[pomp]{pomp}} for a full list of recognized arguments.

When named arguments not recognized by \code{\link[pomp]{pomp}} are provided, these are made available to all basic components via the so-called \dfn{userdata} facility.
This allows the user to pass information to the basic components outside of the usual routes of covariates (\code{covar}) and model parameters (\code{params}).
See \link[pomp:userdata]{?userdata} for information on how to use this facility.}
}
\value{
Upon successful completion, \code{bootgirf} returns an object of class
\sQuote{girfd_spatPomp}.
}
\description{
An implementation of the algorithm of Park and Ionides (2020),
this function is under development, and later will be combined with girf(). In bootgirf.R (this file), the pseudo-simulations are obtained by adding difference in simulation residuals at two target times to the skeleton simulations.
}
\section{Methods}{

The following methods are available for such an object:
\describe{
\item{\code{\link{logLik}}}{ yields an unbiased estimate of the log-likelihood of the data under the model. }
}
}

\examples{
# Create a simulation of a BM using default parameter set
b <- bm(U=3, N=10)

# Run bootstrap-GIRF
girfd.b <- bootgirf(b,
                Np = 100,
                Ninter = length(unit_names(b)),
                lookahead = 1,
                Nguide = 50
)
# Get the likelihood estimate from GIRF
logLik(girfd.b)

# Compare with the likelihood estimate from particle filter
pfd.b <- pfilter(b, Np = 500)
logLik(pfd.b)
}
\references{
\park2020

\asfaw2019
}
\seealso{
Other particle filter methods: 
\code{\link{abfir}()},
\code{\link{abf}()},
\code{\link{bootgirf2}()},
\code{\link{bpfilter-spatPomp}},
\code{\link{girf}()},
\code{\link{hippie}()},
\code{\link{ibpfilter}()},
\code{\link{ienkf-spatPomp}},
\code{\link{igirf}()}

Other \pkg{spatPomp} filtering methods: 
\code{\link{abfir}()},
\code{\link{abf}()},
\code{\link{bootgirf2}()},
\code{\link{bpfilter-spatPomp}},
\code{\link{girf}()},
\code{\link{ibpfilter}()},
\code{\link{igirf}()}
}
\concept{\pkg{spatPomp} filtering methods}
\concept{particle filter methods}
