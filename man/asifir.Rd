% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asifir.R
\name{asifir}
\alias{asifir}
\alias{asifir-spatPomp}
\alias{asifir,spatPomp-method}
\title{Adapted Simulation Island Filter with Intermediate Resampling (ASIF-IR)}
\usage{
\S4method{asifir}{spatPomp}(object, params, Np, islands, nbhd, Ninter, tol = (1e-300), ...)
}
\arguments{
\item{object}{A \code{spatPomp} object.}

\item{params}{A parameter set for the spatiotemporal POMP. If missing, \code{asif} will attempt to run using \code{coef(object)}}

\item{Np}{The number of particles for the adapted simulations within each island.}

\item{islands}{The number of islands for the adapted simulations.}

\item{nbhd}{A neighborhood function with three arguments: \code{object}, \code{time} and \code{unit}. The function should return a \code{list} of two-element vectors. The list output of
\code{nbhd(u,n)} consists of vectors \code{c(a,b)} where \eqn{(a,b)} is a neighbor of \code{(u,n)} in space-time.}

\item{Ninter}{the number of intermediate resampling timepoints.}

\item{tol}{If the resampling weight for a particle is zero due to floating-point precision issues, it is set to the value of \code{tol} since resampling has to be done.}

\item{...}{additional arguments supply new or modify existing model characteristics or components.
See \code{\link[pomp]{pomp}} for a full list of recognized arguments.

When named arguments not recognized by \code{\link[pomp]{pomp}} are provided, these are made available to all basic components via the so-called \dfn{userdata} facility.
This allows the user to pass information to the basic components outside of the usual routes of covariates (\code{covar}) and model parameters (\code{params}).
See \link[pomp:userdata]{?userdata} for information on how to use this facility.}
}
\value{
Upon successful completion, \code{asifir} returns an object of class
\sQuote{asifird_spatPomp}.
}
\description{
An algorithm for estimating the likelihood of a spatiotemporal partially-observed
Markov process (SpatPOMP for short).
Running \code{asifir} causes the algorithm to run independent island jobs which
each carry out an adapted simulation using intermediate resampling.
Adapted simulation is an easier task than filtering, since particles in each island
remain close to each other. Intermediate resampling further assists against
the curse of dimensionality (COD) problem for importance sampling.
The adapted simulations are then weighted in a way that tries to avert COD by
making a weak coupling assumption to get an approximate filter distribution.
As a by-product, we also get an approximation to the likelihood of the data.
}
\section{Methods}{

The following methods are available for such an object:
\describe{
\item{\code{\link{logLik}}}{ yields a biased estimate of the log-likelihood of
the data under the model. }
}
}

\examples{
# Create a simulation of a BM using default parameter set
b <- bm(U=3, N=10)

# Create a neighborhood function mapping a point in space-time to a list of ``neighboring points" in space-time
bm_nbhd <- function(object, time, unit) {
  nbhd_list = list()
  if(time > 1 && unit > 1) nbhd_list = c(nbhd_list, list(c(unit - 1, time - 1)))
  return(nbhd_list)
}
# Run ASIFIR specified number of Monte Carlo islands and particles per island
asifird.b <- asifir(b,
                   islands = 50,
                   Np=20,
                   nbhd = bm_nbhd,
                   Ninter = length(spat_units(bm3)))
# Get the likelihood estimate from ASIFIR
logLik(asifird.b)

# Compare with the likelihood estimate from Particle Filter
pfd.b <- pfilter(b, Np = 500)
logLik(pfd.b)
}
\seealso{
Other particle filter methods: 
\code{\link{asif}()},
\code{\link{bpfilter-spatPomp}},
\code{\link{girf}()},
\code{\link{hippie}()},
\code{\link{ienkf-spatPomp}},
\code{\link{igirf}()}

Other \pkg{spatPomp} filtering methods: 
\code{\link{asif}()},
\code{\link{bpfilter-spatPomp}},
\code{\link{girf}()},
\code{\link{igirf}()}
}
\concept{\pkg{spatPomp} filtering methods}
\concept{particle filter methods}
